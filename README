Lightweight audio filtering library made from webrtc code, with `module.map` for clang interop.

See https://forums.swift.org/t/where-to-place-custom-module-modulemap-for-third-party-c-library-without-touching-their-source-code/17920/2 for further discussion regarding the need for a `module.map`.

Build and install using make (`sudo make install`).

My code in here is licenced under the same BSD 3-clause license as the code I took from: https://code.google.com/p/webrtc/

To build the test program, you need portaudio (version 19 from their website), libsndfile (you can get it from your distro repositories):

gcc -g3 -Wall -o playback_mic test/playback_mic.c *.c agc/*.c ns/*.c aec/*.c other/*.c zam/*.c vad/*.c -lpthread -lm -lportaudio -lsndfile

To run the test you will need a sample input file in .wav format (like this: https://www.opus-codec.org/examples/samples/speech_orig.wav).
The program will exit after the file is played. You should also try to talk while the file is playing to see how it removes the echoes but
not your voice.

./playback_mic speech_orig.wav [output.wav] # if no output file is presented the default is echoes_removed.wav
